{"version":3,"sources":["auth/AuthContext.js","components/Header.js","api/Api.js","components/Home.js","components/LoginForm.js","components/SignupForm.js","components/Map.js","App.js","serviceWorker.js","index.js","images/josh-nuttall-eTrHMJwI5ro-unsplash.jpg","images/logo.png","images/josh-nuttall-XVTWFHcNIko-unsplash.jpg"],"names":["AuthContext","React","createContext","authUser","Header","props","Consumer","context","Navbar","style","backgroundColor","variant","expand","Toggle","aria-controls","aria-expanded","aria-label","onClick","showSidebar","Brand","Image","width","src","logo","Nav","className","username","Link","e","preventDefault","logoutUser","as","NavLink","to","Button","type","a","fetch","baseURL","response","json","userJson","ok","status","errObj","coord","lat","lng","mapJson","password","Promise","resolve","reject","method","headers","body","JSON","stringify","then","user","obj","catch","err","errors","param","msg","bicyclesJson","API","isAuthenticated","userLogin","userLogout","getBicycles","getMapData","userSignup","Home","state","search","bicycles","result","submitting","searched","show","this","setState","map","filter","bicycle","includes","ProgressBar","animated","now","Form","textAlign","onSubmit","placeOrder","Group","InputGroup","size","margin","DropdownButton","Prepend","title","id","Dropdown","Item","FormControl","placeholder","value","onChange","target","Append","handleSearch","color","top","bg1","fluid","Table","striped","bordered","hover","b","index","key","name","store","price","addr","href","link","length","right","bg2","Modal","onHide","handleClose","backdrop","keyboard","closeButton","Title","Body","Component","LoginForm","onChangeUsername","event","onChangePassword","handleSubmit","onLogin","submitted","Container","Row","Col","loginUser","controlId","Label","Control","ev","required","autoFocus","authErr","Alert","Signup","onSignup","signUpUser","MapComponent","useState","selectedPlace","setSelectedPlace","markerMap","setMarkerMap","center","setCenter","zoom","setZoom","infoOpen","setInfoOpen","markers","setMarkers","setMap","loading","setLoading","useEffect","geo","navigator","geolocation","watcher","getCurrentPosition","onError","timeout","clearWatch","console","log","coords","parseFloat","latitude","longitude","c","data","error","alert","message","isLoaded","useLoadScript","googleMapsApiKey","loadHandler","onLoad","mapContainerStyle","height","place","position","pos","marker","prevState","markerLoadHandler","markerClickHandler","anchor","onCloseClick","rating","open_now","vicinity","App","logout","login","history","push","errorObj","err0","signup","Provider","getPublicTasks","path","sm","SignupForm","Map","withRouter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7b92f709.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport const AuthContext = React.createContext({authUser: {}});","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Nav, Button, Image } from 'react-bootstrap';\nimport { AuthContext } from '../auth/AuthContext'\nimport { NavLink } from 'react-router-dom';\nimport logo from '../images/logo.png'\nconst Header = (props) => {\n\n  return (\n    <AuthContext.Consumer>\n      {(context) => (\n        <Navbar style={{ backgroundColor: 'black' }} variant=\"dark\" expand=\"sm\" >\n          <Navbar.Toggle aria-controls=\"left-sidebar\" aria-expanded=\"false\" aria-label=\"Toggle sidebar\" onClick={props.showSidebar} />\n          <Navbar.Brand><Image style={{ width: '50px' }} src={logo}></Image></Navbar.Brand>\n\n          <Nav className=\"ml-md-auto\">\n            {context.authUser &&\n              <>\n                <Navbar.Brand>Welcome {context.authUser.username}!</Navbar.Brand>\n                <Nav.Link onClick={(e) => {\n                  e.preventDefault();\n                  context.logoutUser();\n                }}>Logout</Nav.Link>\n              </>}\n            {!context.authUser && <NavLink as={NavLink} className=\"mr-2\" to=\"/login\">\n              <Button type=\"button\" variant=\"outline-light\">\n                LOGIN\n              </Button>\n            </NavLink>}\n            <NavLink className=\"mr-2\" to=\"/\">\n              <Button type=\"button\" variant=\"outline-light\">\n                Home\n              </Button>\n            </NavLink>\n            <NavLink className=\"mr-2\" to=\"/map\">\n              <Button type=\"button\" variant=\"outline-light\">\n                MAP\n              </Button>\n            </NavLink>\n          </Nav>\n        </Navbar>\n      )}\n    </AuthContext.Consumer>\n\n  );\n}\n\nexport default Header;","const baseURL = \"/api\";\n\nasync function isAuthenticated() {\n    let url = \"/user\";\n    const response = await fetch(baseURL + url);\n    const userJson = await response.json();\n    if (response.ok) {\n        return userJson;\n    } else {\n        let err = { status: response.status, errObj: userJson };\n        throw err;  // An object with the error coming from the server\n    }\n}\n\nasync function getMapData(coord) {\n    let url = \"/map\";\n    const response = await fetch(baseURL + url + `?lat=${coord.lat}&lng=${coord.lng}`);\n    const mapJson = await response.json();\n    if (response.ok) {\n        return mapJson;\n    } else {\n        let err = { status: response.status, errObj: mapJson };\n        throw err;  // An object with the error coming from the server\n    }\n}\n\n\nasync function userLogin(username, password) {\n    return new Promise((resolve, reject) => {\n        fetch(baseURL + '/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username: username, password: password }),\n        }).then((response) => {\n            if (response.ok) {\n                response.json().then((user) => {\n                    resolve(user);\n                });\n            } else {\n                // analyze the cause of error\n                response.json()\n                    .then((obj) => { reject(obj); }) // error msg in the response body\n                    .catch((err) => { reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\n            }\n        }).catch((err) => { reject({ errors: [{ param: \"Server\", msg: \"Cannot communicate\" }] }) }); // connection errors\n    });\n}\n\nasync function userSignup(username, password) {\n    return new Promise((resolve, reject) => {\n        fetch(baseURL + '/signup', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username: username, password: password }),\n        }).then((response) => {\n            if (response.ok) {\n                response.json().then(() => {\n                    resolve();\n                });\n            } else {\n                // analyze the cause of error\n                response.json()\n                    .then((obj) => { reject(obj); }) // error msg in the response body\n                    .catch((err) => { reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\n            }\n        }).catch((err) => { reject({ errors: [{ param: \"Server\", msg: \"Cannot communicate\" }] }) }); // connection errors\n    });\n}\n\nasync function userLogout() {\n    return new Promise((resolve, reject) => {\n        fetch(baseURL + '/logout', {\n            method: 'POST',\n        }).then((response) => {\n            if (response.ok) {\n                resolve(null);\n            } else {\n                // analyze the cause of error\n                response.json()\n                    .then((obj) => { reject(obj); }) // error msg in the response body\n                    .catch((err) => { reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\n            }\n        });\n    });\n}\n\nasync function getBicycles() {\n    let url = \"/bicycles\";\n    const response = await fetch(baseURL + url);\n    const bicyclesJson = await response.json();\n    if (response.ok) {\n        return bicyclesJson;\n    } else {\n        let err = { status: response.status, errObj: bicyclesJson };\n        throw err;  // An object with the error coming from the server\n    }\n}\n\n\n\nconst API = { isAuthenticated, userLogin, userLogout, getBicycles, getMapData, userSignup };\nexport default API;","import React from 'react';\nimport { Form, Button, Modal, ProgressBar, InputGroup, FormControl, Image, Table, DropdownButton, Dropdown } from 'react-bootstrap';\n\nimport { AuthContext } from '../auth/AuthContext'\nimport bg1 from '../images/josh-nuttall-eTrHMJwI5ro-unsplash.jpg'\nimport bg2 from '../images/josh-nuttall-XVTWFHcNIko-unsplash.jpg'\nimport API from '../api/Api';\nimport { Link } from 'react-router-dom';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search: '',\n            bicycles: [],\n            result: [],\n            submitting: true,\n            searched: false,\n            show: false,\n            type: 'Bike shop'\n        };\n    }\n\n    async componentDidMount() {\n        let bicycles = await API.getBicycles();\n        this.setState({ bicycles, submitting: false })\n    }\n\n    handleClose() {\n        this.setState({ show: false })\n    }\n\n    handleSearch() {\n        const map = {\n            \"Bike shop\": \"store\",\n            \"Bike\": \"name\",\n            // \"Price\": \"price\",\n            \"Location City\": \"addr\",\n        }\n\n        let bicycles = this.state.bicycles.filter((bicycle) => bicycle[map[this.state.type]].includes(this.state.search))\n        this.setState({ result: bicycles, searched: true })\n    }\n\n    render() {\n        return <AuthContext.Consumer>\n            {(context) => (<>\n                {\n                    this.state.submitting ? <ProgressBar variant=\"dark\" animated now={100} /> : ''\n                }\n                <Form style={{ textAlign: 'center' }} className=\"mt-5\" onSubmit={this.placeOrder}>\n                    <Form.Group >\n                        <InputGroup size=\"lg\" style={{ width: '60vw', margin: '0px auto' }} className=\"mb-3\">\n                            <DropdownButton\n                                as={InputGroup.Prepend}\n                                variant=\"outline-light\"\n                                title={this.state.type}\n                                id=\"input-group-dropdown\"\n                            >\n                                <Dropdown.Item onClick={(e) => { e.preventDefault(); this.setState({ type: \"Bike shop\" }) }}>Bike shop</Dropdown.Item>\n                                <Dropdown.Item onClick={(e) => { e.preventDefault(); this.setState({ type: \"Bike\" }) }}>Bike</Dropdown.Item>\n                                {/* <Dropdown.Item onClick={(e) => { e.preventDefault(); this.setState({ type: \"Price\" }) }}>Price</Dropdown.Item> */}\n                                <Dropdown.Item onClick={(e) => { e.preventDefault(); this.setState({ type: \"Location City\" }) }}>Location City</Dropdown.Item>\n                            </DropdownButton>\n                            <FormControl\n                                placeholder=\"Search\"\n                                value={this.state.search}\n                                onChange={(e) => this.setState({ search: e.target.value })}\n                            />\n                            <InputGroup.Append>\n                                <Button onClick={() => this.handleSearch()} variant=\"outline-light\">Search</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </Form.Group>\n\n                    {!this.state.searched && <div className=\"position-relative\">\n                        <div className=\"position-absolute\" style={{ width: '100vw', margin: '0 auto', color: 'white', top: '30%' }} >\n                            <h3>Look at a bike shop near you</h3>\n                        </div>\n                        <Image src={bg1} fluid />\n                    </div>}\n\n                </Form>\n\n                <Table striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Bike shop</th>\n                            <th>Bike</th>\n                            <th>Price</th>\n                            <th>Location City</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            !this.state.searched ?\n                                this.state.bicycles.map((b, index) => {\n                                    return <tr key={b.name}>\n                                        <td>{index + 1}</td>\n                                        <td>{b.store}</td>\n                                        <td>{b.name}</td>\n                                        <td>${b.price}</td>\n                                        <td>{b.addr}</td>\n                                        <td><a target=\"_blank\" className=\"btn btn-outline-light\" href={b.link}>Link</a></td>\n                                    </tr>\n                                }) : this.state.result.map((b, index) => {\n                                    return <tr key={b.name}>\n                                        <td>{index + 1}</td>\n                                        <td>{b.store}</td>\n                                        <td>{b.name}</td>\n                                        <td>${b.price}</td>\n                                        <td>{b.addr}</td>\n                                        <td><a target=\"_blank\" className=\"btn btn-outline-light\" href={b.link}>Link</a></td>\n                                    </tr>\n                                })}\n                    </tbody>\n                </Table>\n                {this.state.searched && this.state.result.length === 0 && <h3 className=\"text-center\" style={{ color: 'white' }}>No data</h3>}\n                <div className=\"position-relative\">\n                    <div className=\"position-absolute\" style={{ right: '10px', top: '40%', color: 'white', width: '20vw' }} >\n                        <h3> Find your favorite bike here</h3>\n\n                        <Link to=\"/map\"><Button variant=\"outline-light\">Find More</Button></Link>\n                    </div>\n                    <Image src={bg2} fluid />\n                </div>\n                <Modal\n                    show={this.state.show}\n                    onHide={this.handleClose}\n                    backdrop=\"static\"\n                    keyboard={false}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title></Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        You order has been processed! Thank you!!\n                     </Modal.Body>\n\n                </Modal>\n            </>)}\n        </AuthContext.Consumer>\n    }\n\n}\n\nexport default Home","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport { AuthContext } from '../auth/AuthContext'\nimport { Link } from 'react-router-dom';\n\nclass LoginForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { username: '', password: '', submitted: false, };\n    }\n\n    onChangeUsername = (event) => {\n        this.setState({ username: event.target.value });\n    };\n\n    onChangePassword = (event) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleSubmit = async (event, onLogin) => {\n        event.preventDefault();\n        onLogin(this.state.username, this.state.password);\n        this.setState({ submitted: true });\n    }\n\n    render() {\n        return (\n            <AuthContext.Consumer>\n                {(context) => (\n                    <>\n                        <Container style={{ color: 'white' }} fluid>\n                            <Row>\n                                <Col>\n                                    <h2 className=\"ui teal image header\">\n                                        <div className=\"content\">\n                                            Log in to your account\n                                        </div>\n                                    </h2>\n\n                                    <Form method=\"POST\" onSubmit={(event) => this.handleSubmit(event, context.loginUser)}>\n                                        <Form.Group controlId=\"username\">\n                                            <Form.Label>Username</Form.Label>\n                                            <Form.Control type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={(ev) => this.onChangeUsername(ev)} required autoFocus />\n                                        </Form.Group>\n\n                                        <Form.Group controlId=\"password\">\n                                            <Form.Label>Password</Form.Label>\n                                            <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={(ev) => this.onChangePassword(ev)} required />\n                                        </Form.Group>\n\n\n                                        <Button variant=\"outline-light\" type=\"submit\">Login</Button>\n                                        <br />\n                                        <div className=\"mt-2\">\n                                            <span >Dose not have a acount? <Link to=\"/signup\">create account</Link></span>\n                                        </div>\n\n                                    </Form>\n\n                                    {context.authErr &&\n                                        <Alert variant=\"danger mt-5\">\n                                            {context.authErr.msg}\n                                        </Alert>\n                                    }\n                                </Col>\n                            </Row>\n                        </Container>\n                    </>\n                )}\n            </AuthContext.Consumer>\n\n        );\n    }\n\n\n}\n\nexport default LoginForm;","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport { AuthContext } from '../auth/AuthContext'\n\nclass Signup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { username: '', password: '', submitted: false, };\n    }\n\n    onChangeUsername = (event) => {\n        this.setState({ username: event.target.value });\n    };\n\n    onChangePassword = (event) => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleSubmit = async (event, onSignup) => {\n        event.preventDefault();\n        onSignup(this.state.username, this.state.password);\n        this.setState({ submitted: true });\n    }\n\n    render() {\n        return (\n            <AuthContext.Consumer>\n                {(context) => (\n                    <>\n                        <Container style={{ color: 'white' }} fluid>\n                            <Row>\n                                <Col>\n                                    <h2 className=\"ui teal image header\">\n                                        <div className=\"content\">\n                                            Create a new account\n                                        </div>\n                                    </h2>\n\n                                    <Form method=\"POST\" onSubmit={(event) => this.handleSubmit(event, context.signUpUser)}>\n                                        <Form.Group controlId=\"username\">\n                                            <Form.Label>Username</Form.Label>\n                                            <Form.Control type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={(ev) => this.onChangeUsername(ev)} required autoFocus />\n                                        </Form.Group>\n\n                                        <Form.Group controlId=\"password\">\n                                            <Form.Label>Password</Form.Label>\n                                            <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={(ev) => this.onChangePassword(ev)} required />\n                                        </Form.Group>\n\n                                        <Button variant=\"outline-light\" type=\"submit\">Sign UP</Button>\n\n                                    </Form>\n\n                                    {context.authErr &&\n                                        <Alert variant=\"danger mt-5\">\n                                            {context.authErr.msg}\n                                        </Alert>\n                                    }\n                                </Col>\n                            </Row>\n                        </Container>\n                    </>\n                )}\n            </AuthContext.Consumer>\n\n        );\n    }\n\n\n}\n\nexport default Signup;","import React, { useEffect, useState } from 'react'\nimport {\n    useLoadScript,\n    GoogleMap,\n    Marker,\n    InfoWindow\n} from '@react-google-maps/api';\nimport API from '../api/Api';\nimport bg1 from '../images/josh-nuttall-eTrHMJwI5ro-unsplash.jpg'\nimport { Image } from 'react-bootstrap';\n\nfunction MapComponent() {\n\n    const [selectedPlace, setSelectedPlace] = useState(null);\n    const [markerMap, setMarkerMap] = useState({});\n    const [center, setCenter] = useState({ lat: 43.651070, lng: -79.347015 });\n    const [zoom, setZoom] = useState(5);\n    const [infoOpen, setInfoOpen] = useState(false);\n    const [markers, setMarkers] = useState([]);\n    const [map, setMap] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const geo = navigator.geolocation;\n        if (!geo) {\n            console.log('Geolocation is not supported');\n            return;\n        }\n        const watcher = geo.getCurrentPosition(onChange, onError, { timeout: 10000 });\n        return () => geo.clearWatch(watcher);\n    }, [])\n\n    const onChange = ({ coords }) => {\n        setCenter({\n            lat: parseFloat(coords.latitude),\n            lng: parseFloat(coords.longitude),\n        });\n        search(\n            coords.latitude,\n            coords.longitude,\n        )\n        setLoading(false);\n    };\n\n\n    const search = (lat = 43.651070, lng = -79.347015) => {\n        const c = { lat, lng }\n        console.log(c)\n        API.getMapData(c)\n            .then((data) => {\n                setMarkers(data)\n            })\n        // setCenter(c)\n    }\n\n\n    const onError = (error) => {\n        search()\n        setLoading(false);\n        alert(`Can't get your location this time. The default loaction is Toronto`)\n        console.log(error.message);\n    };\n\n    const { isLoaded } = useLoadScript({\n        googleMapsApiKey: \"AIzaSyCqIAlQpyecPGoONZ1w4CMQLgBtmdeRS_A\"\n    });\n\n\n    const loadHandler = map => {\n        setMap(map)\n    };\n\n    const markerLoadHandler = (marker, place) => {\n        return setMarkerMap(prevState => {\n            return { ...prevState, [place.id]: marker };\n        });\n    };\n\n    const markerClickHandler = (event, place) => {\n\n        setSelectedPlace(place);\n        if (infoOpen) {\n            setInfoOpen(false);\n        }\n        setInfoOpen(true);\n        if (zoom < 13) {\n            setZoom(13);\n        }\n\n        // setCenter(place.pos)\n    };\n\n    const renderMap = () => {\n        return (\n            <>\n                {loading && <span style={{ color: 'white' }}>Getting your location...</span>}\n                <h3 style={{ color: 'white' }}>Find Bicycle Stores near you</h3>\n                <GoogleMap\n                    onLoad={loadHandler}\n                    center={center}\n                    zoom={13}\n                    mapContainerStyle={{\n                        height: \"70vh\",\n                        width: \"100%\"\n                    }}\n                >\n\n                    {markers.map(place => (\n                        <Marker\n                            key={place.id}\n                            position={place.pos}\n                            onLoad={marker => markerLoadHandler(marker, place)}\n                            onClick={event => markerClickHandler(event, place)}\n                        />\n                    ))}\n\n                    {infoOpen && selectedPlace && (\n                        <InfoWindow\n                            anchor={markerMap[selectedPlace.id]}\n                            onCloseClick={() => setInfoOpen(false)}\n                        >\n                            <div>\n                                <h6>{selectedPlace.name}</h6>\n                                <div>Rating: {selectedPlace.rating}</div>\n                                <div>Open now: {selectedPlace.open_now ? 'Open' : 'Close'}</div>\n                                <div>{selectedPlace.vicinity} </div>\n                            </div>\n                        </InfoWindow>\n                    )}\n                </GoogleMap>\n                <div className=\"position-relative\">\n                    <Image src={bg1} fluid />\n                </div>\n            </>\n        );\n    };\n\n    return isLoaded ? renderMap() : null;\n}\n\nexport default MapComponent\n\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\nimport Home from './components/Home'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport LoginForm from './components/LoginForm'\nimport SignupForm from './components/SignupForm';\nimport API from './api/Api'\n\n\n\nimport { Redirect, Route } from 'react-router-dom';\nimport { Switch } from 'react-router';\nimport { AuthContext } from './auth/AuthContext';\nimport { withRouter } from 'react-router-dom';\nimport Map from './components/Map';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    //check if the user is authenticated\n    API.isAuthenticated().then(\n      (user) => {\n        this.setState({ authUser: user });\n      }\n    ).catch((err) => {\n      this.setState({ authErr: err.errorObj });\n      // this.props.history.push(\"/login\");\n    });\n\n  }\n\n  logout = () => {\n    console.log('logout')\n    API.userLogout().then(() => {\n      this.setState({ authUser: null, authErr: null });\n    });\n  }\n\n  login = (username, password) => {\n    API.userLogin(username, password).then(\n      (user) => {\n        this.setState({ authUser: user, authErr: null });\n        this.props.history.push(\"/\");\n      }\n    ).catch(\n      (errorObj) => {\n        console.log(errorObj)\n        const err0 = errorObj.errors[0];\n        this.setState({ authErr: err0 });\n      }\n    );\n  }\n\n  signup = (username, password) => {\n    API.userSignup(username, password).then(\n      () => {\n        this.props.history.push(\"/login\");\n      }\n    ).catch(\n      (errorObj) => {\n        console.log(errorObj)\n        const err0 = errorObj.errors[0];\n        this.setState({ authErr: err0 });\n      }\n    );\n  }\n\n  render() {\n    // compose value prop as object with user object and logout method\n    const value = {\n      authUser: this.state.authUser,\n      authErr: this.state.authErr,\n      loginUser: this.login,\n      logoutUser: this.logout,\n      signUpUser: this.signup\n\n    }\n    return (\n      <AuthContext.Provider value={value}>\n        <Header showSidebar={this.showSidebar} getPublicTasks={this.getPublicTasks} />\n        <Container fluid>\n          <Switch>\n            <Route path=\"/login\">\n              <Row className=\"vheight-100\">\n                <Col sm={4}></Col>\n                <Col sm={4} className=\"below-nav\">\n                  <LoginForm />\n                </Col>\n              </Row>\n            </Route>\n\n            <Route path=\"/signup\">\n              <Row className=\"vheight-100\">\n                <Col sm={4}></Col>\n                <Col sm={4} className=\"below-nav\">\n                  <SignupForm />\n                </Col>\n              </Row>\n            </Route>\n\n            <Route path=\"/map\">\n              <Row className=\"vheight-100\">\n                <Col sm={12} className=\"below-nav\">\n                  <Map></Map>\n                </Col>\n              </Row>\n            </Route>\n\n            <Route path=\"/\">\n              <Row className=\"vheight-100\">\n                <Col sm={12} className=\"below-nav\">\n                  <Home></Home>\n                </Col>\n              </Row>\n            </Route>\n\n            <Route>\n              <Redirect to='/' />\n            </Route>\n          </Switch>\n        </Container>\n      </AuthContext.Provider>\n    );\n  }\n\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/josh-nuttall-eTrHMJwI5ro-unsplash.1a1ebdbe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.50221709.png\";","module.exports = __webpack_public_path__ + \"static/media/josh-nuttall-XVTWFHcNIko-unsplash.13778c30.jpg\";"],"sourceRoot":""}